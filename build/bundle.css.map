{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import createDebug from 'debug'\n    import Recogito from '@recogito/recogito-js'\n    import {fetchAnnotations} from '../lib/web-annotation'\n    import faust from '../faust.txt'\n\n    createDebug.enable('annotation*')\n    const debug = createDebug('annotation')\n\n    let content, serverUrl, isHyperwell = true, submitted, r, endpoint\n\n    function parseHyperwellUrl(gatewayUrl) {\n        const url = new URL(gatewayUrl)\n        const segments = url.pathname.split('/').filter(segment => segment.length)\n        if (segments.length < 2 || segments[0] !== 'annotations') {\n            throw new Error('not a valid notebook URL')\n        }\n        return {\n            host: url.host,\n            notebookId: segments[1]\n        }\n    }\n\n    async function submit(event) {\n        event.preventDefault()\n\n        if (!serverUrl || submitted) {\n            return\n        }\n\n        if (!serverUrl.endsWith('/')) {\n            serverUrl = `${serverUrl}/`\n        }\n\n        const endpoint = serverUrl\n        const annotations = await fetchAnnotations(endpoint)\n\n        const r = Recogito.init({content});\n        r.setAnnotations(annotations)\n\n        r.on(\"createAnnotation\", async (annotation) => {\n            debug('create')\n            const rawAnnotation = {...annotation}\n            if (annotation.id) {\n                delete rawAnnotation.id\n            }\n\n            await fetch(endpoint, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                redirect: \"follow\",\n                body: JSON.stringify(rawAnnotation)\n            });\n        });\n\n        r.on(\"updateAnnotation\", async (annotation) => {\n            debug('update', annotation.id)\n            await fetch(annotation.id, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                redirect: \"follow\",\n                body: JSON.stringify(annotation)\n            });\n        });\n\n        r.on(\"deleteAnnotation\", async (annotation) => {\n            debug('delete', annotation.id)\n            await fetch(annotation.id, {\n                method: \"delete\",\n            });\n        });\n\n        if (isHyperwell) {\n            const {host, notebookId} = parseHyperwellUrl(endpoint)\n            const subscriptionEndpoint = `ws://${host}/annotations/subscribe/${notebookId}`\n\n            const ws = new WebSocket(subscriptionEndpoint)\n            ws.onmessage = event => {\n                const diff = JSON.parse(event.data)\n                debug('real-time update', diff)\n\n                for (const addedAnnotation of diff.inserted) {\n                    r.addAnnotation(addedAnnotation)\n                }\n\n                for (const changedAnnotation of diff.changed) {\n                    r.addAnnotation(changedAnnotation)\n                }\n\n                for (const deletedAnnotation of diff.deleted) {\n                    r.removeAnnotation(deletedAnnotation)\n                }\n            };\n        }\n\n        submitted = true\n    }\n\n    const verses = faust.split('\\n\\n').map(group => group.split('\\n'))\n</script>\n\n<main>\n    <header>\n        <form on:submit={submit} disabled={submitted}>\n            <div class=\"line\">\n                <label for=\"server-url\" class=\"full\">Annotation Server URL:</label>\n                <input type=\"text\" id=\"server-url\" disabled={submitted} bind:value={serverUrl}/>\n            </div>\n\n            <div class=\"line\">\n                <label for=\"is-hyperwell\">\n                    <input type=\"checkbox\" id=\"is-hyperwell\" disabled={submitted} bind:checked={isHyperwell}/>\n                    Hyperwell Gateway\n                </label>\n            </div>\n\n            <button class=\"submit\" disabled={!serverUrl || submitted}>Load Annotations</button>\n        </form>\n    </header>\n    <div bind:this={content} class=\"chapter\" class:disabled=\"{ submitted !== true }\">\n        {#each verses as group}\n            <p class=\"group\">\n                {#each group as verse}\n                    {verse}<br/>\n                {/each}\n            </p>\n        {/each}\n    </div>\n</main>\n\n<style>\n    header {\n        box-sizing: border-box;\n        width: 100%;\n        margin: 0;\n        padding: 25px;\n\n        background: rgb(245, 245, 245);\n        font: 400 14px/100% Inter, sans-serif;\n    }\n\n    h1 {\n        color: #ff3e00;\n        text-transform: uppercase;\n        font-size: 4em;\n        font-weight: 100;\n    }\n\n    .line {\n        display: flex;\n        flex-direction: column;\n        margin-bottom: 10px\n    }\n\n    label {\n\n\n    }\n\n    label.full {\n        margin-bottom: 5px;\n    }\n\n    input[type=text] {\n        width: 450px;\n        padding: 8px 12px;\n        border: 1px solid rgb(200, 200, 200);\n        border-radius: 3px;\n\n        transition: border-color 125ms ease-in-out;\n    }\n\n    input[type=text]:focus, input[type=text]:active {\n        border-color: rgb(150, 150, 245);\n    }\n\n    button.submit {\n        padding: 8px 12px;\n        border: 0 none;\n        border-radius: 3px;\n        color: white;\n        background-color: rgb(50, 50, 50);\n\n        cursor: pointer;\n        transition: background-color 125ms ease-in-out, opacity 125ms ease-in-out;\n    }\n\n    button.submit[disabled] {\n        opacity: 0.6;\n        cursor: not-allowed;\n    }\n\n    button.submit:not([disabled]):hover {\n        background-color: rgb(70, 70, 70);\n    }\n\n    .chapter {\n        margin: 50px;\n        font: 500 24px/150% 'EB Garamond', times, serif;\n    }\n\n    .chapter.disabled {\n        opacity: 0.25;\n        pointer-events: none;\n    }\n\n    p.group {\n        margin-bottom: 30px;\n    }\n\n    @media (min-width: 640px) {\n        main {\n            max-width: none;\n        }\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAuII,MAAM,cAAC,CAAC,AACJ,UAAU,CAAE,UAAU,CACtB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CAEb,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAC9B,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,UAAU,AACzC,CAAC,AASD,KAAK,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,aAAa,CAAE,IAAI;IACvB,CAAC,AAOD,KAAK,KAAK,cAAC,CAAC,AACR,aAAa,CAAE,GAAG,AACtB,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAC,CAAC,AACd,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,GAAG,CAElB,UAAU,CAAE,YAAY,CAAC,KAAK,CAAC,WAAW,AAC9C,CAAC,AAED,KAAK,CAAC,IAAI,CAAC,IAAI,eAAC,MAAM,CAAE,KAAK,CAAC,IAAI,CAAC,IAAI,eAAC,OAAO,AAAC,CAAC,AAC7C,YAAY,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACpC,CAAC,AAED,MAAM,OAAO,cAAC,CAAC,AACX,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,KAAK,CACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAEjC,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,AAC7E,CAAC,AAED,MAAM,OAAO,CAAC,QAAQ,CAAC,cAAC,CAAC,AACrB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,WAAW,AACvB,CAAC,AAED,MAAM,qBAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,AAAC,CAAC,AACjC,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AACrC,CAAC,AAED,QAAQ,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,AACnD,CAAC,AAED,QAAQ,SAAS,cAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,IAAI,AACxB,CAAC,AAED,CAAC,MAAM,cAAC,CAAC,AACL,aAAa,CAAE,IAAI,AACvB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACvB,IAAI,cAAC,CAAC,AACF,SAAS,CAAE,IAAI,AACnB,CAAC,AACL,CAAC"
}